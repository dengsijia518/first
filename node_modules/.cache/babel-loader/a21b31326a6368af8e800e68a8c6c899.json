{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gua\\\\forms\\\\src\\\\components\\\\SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const nameInputRef = useRef();\n  const [enteredName, setEnteredName] = useState('');\n  const [enteredNameisValid, setEnteredNameIsValid] = useState(false);\n\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n  };\n\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n\n    if (enteredName.trim() == '') {\n      setEnteredNameIsValid(false);\n      return;\n    }\n\n    setEnteredNameIsValid(true);\n    console.log(enteredName);\n    const enteredValue = nameInputRef.current.value;\n    console.log(enteredValue);\n    setEnteredName('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: nameInputRef,\n        type: \"text\",\n        id: \"name\",\n        value: enteredName,\n        onChange: nameInputChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), !enteredNameisValid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"UsfA7rogYGaRMM1Xj0SIiyc4IAM=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"sources":["C:/Users/Gua/forms/src/components/SimpleInput.js"],"names":["useRef","useState","SimpleInput","props","nameInputRef","enteredName","setEnteredName","enteredNameisValid","setEnteredNameIsValid","nameInputChangeHandler","event","target","value","formSubmissionHandler","preventDefault","trim","console","log","enteredValue","current"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,QAAjB,QAAiC,OAAjC;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAMC,YAAY,GAAGJ,MAAM,EAA3B;AACA,QAAM,CAACK,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACM,kBAAD,EAAqBC,qBAArB,IAA8CP,QAAQ,CAAC,KAAD,CAA5D;;AAEA,QAAMQ,sBAAsB,GAAGC,KAAK,IAAI;AACtCJ,IAAAA,cAAc,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;AACD,GAFD;;AAIA,QAAMC,qBAAqB,GAAGH,KAAK,IAAI;AACrCA,IAAAA,KAAK,CAACI,cAAN;;AAEA,QAAIT,WAAW,CAACU,IAAZ,MAAsB,EAA1B,EAA8B;AAC5BP,MAAAA,qBAAqB,CAAC,KAAD,CAArB;AACA;AACD;;AAEDA,IAAAA,qBAAqB,CAAC,IAAD,CAArB;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAYZ,WAAZ;AAEA,UAAMa,YAAY,GAAGd,YAAY,CAACe,OAAb,CAAqBP,KAA1C;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYC,YAAZ;AACAZ,IAAAA,cAAc,CAAC,EAAD,CAAd;AACD,GAdD;;AAgBA,sBACE;AAAM,IAAA,QAAQ,EAAEO,qBAAhB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,GAAG,EAAET,YAAZ;AAA0B,QAAA,IAAI,EAAC,MAA/B;AAAsC,QAAA,EAAE,EAAC,MAAzC;AAAgD,QAAA,KAAK,EAAEC,WAAvD;AAAoE,QAAA,QAAQ,EAAEI;AAA9E;AAAA;AAAA;AAAA;AAAA,cAFF,EAGG,CAACF,kBAAD,iBAAuB;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAH1B;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CArCD;;GAAML,W;;KAAAA,W;AAuCN,eAAeA,WAAf","sourcesContent":["import { useRef, useState } from \"react\";\n\nconst SimpleInput = (props) => {\n  const nameInputRef = useRef()\n  const [enteredName, setEnteredName] = useState('');\n  const [enteredNameisValid, setEnteredNameIsValid] = useState(false)\n\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n  }\n\n  const formSubmissionHandler = event => {\n    event.preventDefault(); \n\n    if (enteredName.trim() == '') {\n      setEnteredNameIsValid(false)\n      return;\n    }\n\n    setEnteredNameIsValid(true)\n    console.log(enteredName);\n\n    const enteredValue = nameInputRef.current.value;\n    console.log(enteredValue)\n    setEnteredName('')\n  }\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className='form-control'>\n        <label htmlFor='name'>Your Name</label>\n        <input ref={nameInputRef} type='text' id='name' value={enteredName} onChange={nameInputChangeHandler}/>\n        {!enteredNameisValid && <p className=\"error-text\">Name must not be empty</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"]},"metadata":{},"sourceType":"module"}